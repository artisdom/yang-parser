[:module
 [:name "toaster"]
 [:namespace "http://netconfcentral.org/ns/toaster"]
 [:prefix "toast"]
 [:organization "Netconf Central"]
 [:contact "Andy Bierman <andy@netconfcentral.org>"]
 [:description
  "YANG version of the TOASTER-MIB. Copyright (c) 2009 Andy Bierman and the persons identified as authors of the code. All rights reserved. Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the BSD 3-Clause License http://opensource.org/licenses/BSD-3-Clause"]
 [:revision
  [:name "2009-11-20"]
  [:description "Toaster module in progress."]]
 [:identity
  [:name "toast-type"]
  [:description
   "Base for all bread types supported by the toaster. New bread types not listed here nay be added in the future."]]
 [:identity
  [:name "white-bread"]
  [:base "toast:toast-type"]
  [:description "White bread."]]
 [:identity
  [:name "wheat-bread"]
  [:base "toast-type"]
  [:description "Wheat bread."]]
 [:identity
  [:name "wonder-bread"]
  [:base "toast-type"]
  [:description "Wonder bread."]]
 [:identity
  [:name "frozen-waffle"]
  [:base "toast-type"]
  [:description "Frozen waffle."]]
 [:identity
  [:name "frozen-bagel"]
  [:base "toast-type"]
  [:description "Frozen bagel."]]
 [:identity
  [:name "hash-brown"]
  [:base "toast-type"]
  [:description "Hash browned potatos."]]
 [:typedef
  [:name "DisplayString"]
  [:type [:name "string"] [:length "0 .. 255"]]
  [:description
   "YANG version of the SMIv2 DisplayString TEXTUAL-CONVENTION."]
  [:reference "RFC 2579, section 2."]]
 [:container
  [:name "toaster"]
  [:presence "Indicates the toaster service is available"]
  [:description
   "Top-level container for all toaster database objects."]
  [:leaf
   [:name "toasterManufacturer"]
   [:type [:name "DisplayString"]]
   [:config false]
   [:mandatory true]
   [:description
    "The name of the toaster's manufacturer. For instance, Microsoft Toaster."]]
  [:leaf
   [:name "toasterModelNumber"]
   [:type [:name "DisplayString"]]
   [:config false]
   [:mandatory true]
   [:description
    "The name of the toaster's model. For instance, Radiant Automatic."]]
  [:leaf
   [:name "toasterStatus"]
   [:type
    [:name "enumeration"]
    [:enum
     [:name "up"]
     [:value "1"]
     [:description
      "The toaster knob position is up. No toast is being made now."]]
    [:enum
     [:name "down"]
     [:value "2"]
     [:description
      "The toaster knob position is down. Toast is being made now."]]]
   [:config false]
   [:mandatory true]
   [:description
    "This variable indicates the current state of the toaster."]]]
 [:rpc
  [:name "make-toast"]
  [:description
   "Make some toast. The toastDone notification will be sent when the toast is finished. An 'in-use' error will be returned if toast is already being made. A 'resource-denied' error will be returned if the toaster service is disabled."]
  [:rpc-input
   [:leaf
    [:name "toasterDoneness"]
    [:type [:name "uint32"] [:range [:range-simple "1 .. 10"]]]
    [:default "5"]
    [:description
     "This variable controls how well-done is the ensuing toast. It should be on a scale of 1 to 10. Toast made at 10 generally is considered unfit for human consumption; toast made at 1 is warmed lightly."]]
   [:leaf
    [:name "toasterToastType"]
    [:type [:name "identityref"] [:base "toast:toast-type"]]
    [:default "toast:wheat-bread"]
    [:description
     "This variable informs the toaster of the type of material that is being toasted. The toaster uses this information, combined with toasterDoneness, to compute for how long the material must be toasted to achieve the required doneness."]]]]
 [:rpc
  [:name "cancel-toast"]
  [:description
   "Stop making toast, if any is being made. A 'resource-denied' error will be returned if the toaster service is disabled."]]
 [:notification
  [:name "toastDone"]
  [:description "Indicates that the toast in progress has completed."]
  [:leaf
   [:name "toastStatus"]
   [:type
    [:name "enumeration"]
    [:enum [:name "done"] [:description "The toast is done."]]
    [:enum
     [:name "cancelled"]
     [:description "The toast was cancelled."]]
    [:enum
     [:name "error"]
     [:description
      "The toaster service was disabled or the toaster is broken."]]]
   [:description "Indicates the final toast status"]]]]
